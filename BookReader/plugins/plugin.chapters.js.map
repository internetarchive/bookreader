{"version":3,"sources":["webpack://@internetarchive/bookreader/./src/js/plugins/plugin.chapters.js"],"names":["super_","jQuery","extend","BookReader","defaultOptions","olHost","enableChaptersPlugin","bookId","prototype","setup","options","call","this","init","ui","getOpenLibraryRecord","enableMobileNav","bind","eventNames","mobileNavOpen","updateTOCState","firstIndex","_tocEntries","$","parent","hasClass","click","addChapter","chapterTitle","pageNumber","pageIndex","percentThrough","util","cssPercentage","getNumLeafs","jumpToChapter","event","jumpToIndex","delegateTarget","data","removeClass","addClass","title","pageStr","mobileChapter","append","text","appendTo","undefined","css","left","hover","marker","currentTarget","tooltip","querySelector","tooltipOffset","getBoundingClientRect","targetOffset","boxSizeAdjust","parseInt","getComputedStyle","paddingLeft","x","style","setProperty","target","on","attr","removeChapters","remove","updateTOC","tocEntries","length","show","i","addChapterFromEntry","children","each","el","mobileHTML","tocEntryObject","getPageIndex","chapterStr","label","filter","join","$el","baseURL","fetchUrlByBookId","ajax","url","dataType","then","olObject","table_of_contents","buildMobileDrawerElement","find","after","imagesBaseURL","hide","currIndex","tocEntriesIndexed","reverse","currChapter","findIndex"],"mappings":"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","file":"plugins/plugin.chapters.js","sourcesContent":["/* global BookReader */\n/**\n * Plugin for chapter markers in BookReader. Fetches from openlibrary.org\n * Could be forked, or extended to alter behavior\n */\n\njQuery.extend(BookReader.defaultOptions, {\n  olHost: 'https://openlibrary.org',\n  enableChaptersPlugin: true,\n  bookId: '',\n});\n\n/** @override Extend the constructor to add search properties */\nBookReader.prototype.setup = (function (super_) {\n  return function (options) {\n    super_.call(this, options);\n\n    this.olHost = options.olHost;\n    this.enableChaptersPlugin = options.enableChaptersPlugin;\n    this.bookId = options.bookId;\n  };\n})(BookReader.prototype.setup);\n\n/** @override Extend to call Open Library for TOC */\nBookReader.prototype.init = (function(super_) {\n  return function() {\n    super_.call(this);\n    if (this.enableChaptersPlugin && this.ui !== 'embed') {\n      this.getOpenLibraryRecord();\n    }\n    if (this.enableMobileNav) {\n      this.bind(BookReader.eventNames.mobileNavOpen,\n        () => {\n          this.updateTOCState(this.firstIndex, this._tocEntries);\n          if ($('table-contents-list').parent().hasClass('mm-opened')) {\n            this.updateTOCState(this.firstIndex, this._tocEntries);\n          }\n        }\n      )\n      $(\".BRmobileMenu__tableContents\").click(\n        () => {\n          this.updateTOCState(this.firstIndex, this._tocEntries);\n        }\n      );\n    }\n  }\n})(BookReader.prototype.init);\n\n/**\n * Adds chapter marker to navigation scrubber\n *\n * @param {string} chapterTitle\n * @param {string} pageNumber\n * @param {number} pageIndex\n */\nBookReader.prototype.addChapter = function(chapterTitle, pageNumber, pageIndex) {\n  const uiStringPage = 'Page'; // i18n\n  const percentThrough = BookReader.util.cssPercentage(pageIndex, this.getNumLeafs() - 1);\n  const jumpToChapter = (event) => {\n    this.jumpToIndex($(event.delegateTarget).data('pageIndex'));\n    $('.current-chapter').removeClass('current-chapter');\n    $(event.delegateTarget).addClass('current-chapter');\n  }\n  const title = `${chapterTitle} | `;\n  const pageStr = `${uiStringPage} ${pageNumber}`;\n\n  //adding items to mobile table of contents\n  const mobileChapter = $(`<li></li>`).append($(`<span class='BRTOCElementTitle'></span>`).text(title))\n    .append($(`<span class='BRTOCElementPage'></span>`).text(pageStr));\n  mobileChapter.addClass('BRtable-contents-el')\n    .appendTo(this.$('.table-contents-list'))\n    .data({ pageIndex });\n\n  //adds .BRchapters to the slider only if pageIndex exists\n  if (pageIndex != undefined) {\n    $(`<div></div>`)\n      .append($('<div />').text(title + pageStr))\n      .addClass('BRchapter')\n      .css({ left: percentThrough })\n      .appendTo(this.$('.BRnavline'))\n      .data({ pageIndex })\n      .hover(event => {\n        // remove hover effect from other markers then turn on just for this\n        const marker = event.currentTarget;\n        const tooltip = marker.querySelector('div');\n        const tooltipOffset = tooltip.getBoundingClientRect();\n        const targetOffset = marker.getBoundingClientRect();\n        const boxSizeAdjust = parseInt(getComputedStyle(tooltip).paddingLeft) * 2;\n        if (tooltipOffset.x - boxSizeAdjust < 0) {\n          tooltip.style.setProperty('transform', `translateX(-${targetOffset.left - boxSizeAdjust}px)`);\n        }\n        this.$('.BRsearch,.BRchapter').removeClass('front');\n        $(event.target).addClass('front');\n      },\n      event => $(event.target).removeClass('front')\n      )\n      .on('click', jumpToChapter);\n\n    //adding clickable properties to mobile chapters\n    mobileChapter.bind('click', jumpToChapter)\n      .addClass('chapter-clickable')\n      .attr(\"data-event-click-tracking\",\"BRTOCPanel|GoToChapter\");\n  }\n\n};\n\n/*\n * Remove all chapters.\n */\nBookReader.prototype.removeChapters = function() {\n  this.$('.BRnavpos .BRchapter').remove();\n};\n\n/**\n * Update the table of contents based on array of TOC entries.\n * @param {TocEntry[]} tocEntries\n */\nBookReader.prototype.updateTOC = function(tocEntries) {\n  this.removeChapters();\n  if (this.enableMobileNav && tocEntries.length > 0) {\n    this.$(\".BRmobileMenu__tableContents\").show();\n  }\n  for (let i = 0; i < tocEntries.length; i++) {\n    this.addChapterFromEntry(tocEntries[i]);\n  }\n  this._tocEntries = tocEntries;\n  $('.table-contents-list').children().each((i, el) => {\n    tocEntries[i].mobileHTML = el;\n  })\n};\n\n/**\n * @typedef {Object} TocEntry\n * Table of contents entry as defined -- format is defined by Open Library\n * @property {string} pagenum\n * @property {number} level\n * @property {string} label\n * @property {{type: '/type/toc_item'}} type\n * @property {string} title\n * @property {HTMLElement} mobileHTML\n * @property {number} pageIndex\n\n *\n * @example {\n *   \"pagenum\": \"17\",\n *   \"level\": 1,\n *   \"label\": \"CHAPTER I\",\n *   \"type\": {\"key\": \"/type/toc_item\"},\n *   \"title\": \"THE COUNTRY AND THE MISSION\"\n * }\n */\n\n/**\n * @param {TocEntry} tocEntryObject\n */\nBookReader.prototype.addChapterFromEntry = function(tocEntryObject) {\n  tocEntryObject.pageIndex = this.getPageIndex(tocEntryObject['pagenum']);\n  //creates a string with non-void tocEntryObject.label and tocEntryObject.title\n  const chapterStr = [tocEntryObject.label, tocEntryObject.title]\n    .filter(x => x)\n    .join(' ');\n  this.addChapter(chapterStr, tocEntryObject['pagenum'], tocEntryObject.pageIndex);\n  this.$('.BRchapter, .BRsearch').each((i, el) => {\n    const $el = $(el);\n    $el.hover(\n      () => $el.addClass('front'),\n      () => $el.removeClass('front'));\n  });\n};\n\n/**\n * getOpenLibraryRecord\n *\n * The bookreader is designed to call openlibrary API and constructs the\n * \"Return book\" button using the response.\n *\n * This makes a call to OL API and calls the given callback function with the\n * response from the API.\n */\nBookReader.prototype.getOpenLibraryRecord = function () {\n  // Try looking up by ocaid first, then by source_record\n  const baseURL = `${this.olHost}/query.json?type=/type/edition&*=`;\n  const fetchUrlByBookId = `${baseURL}&ocaid=${this.bookId}`;\n\n  /*\n  * Update Chapter markers based on received record from Open Library.\n  * Notes that Open Library record is used for extra metadata, and also for lending\n  */\n  const setUpChapterMarkers = (olObject) => {\n    if (olObject && olObject.table_of_contents) {\n      // XXX check here that TOC is valid\n      this.updateTOC(olObject.table_of_contents);\n    }\n  };\n\n  $.ajax({ url: fetchUrlByBookId, dataType: 'jsonp' })\n    .then(data => {\n      if (data && data.length > 0) {\n        return data;\n      } else {\n      // try sourceid\n        return $.ajax({ url: `${baseURL}&source_records=ia:${this.bookId}`, dataType: 'jsonp' });\n      }\n    })\n    .then(data => {\n      if (data && data.length > 0) {\n        setUpChapterMarkers(data[0]);\n      }\n    });\n}\n\n// Extend buildMobileDrawerElement with table of contents list\nBookReader.prototype.buildMobileDrawerElement = (function (super_) {\n  return function () {\n    const $el = super_.call(this);\n    if (this.enableMobileNav && this.options.enableChaptersPlugin) {\n      $el.find('.BRmobileMenu__moreInfoRow').after($(`\n        <li class=\"BRmobileMenu__tableContents\" data-event-click-tracking=\"BRSidebar|TOCPanel\">\n            <span>\n                <span class=\"DrawerIconWrapper\">\n                  <img class=\"DrawerIcon\" src=\"${this.imagesBaseURL}icon_toc.svg\" alt=\"toc-icon\"/>\n                </span>\n                Table of Contents\n            </span>\n            <div>\n                <ol class=\"table-contents-list\">\n                </ol>\n            </div>\n        </li>`).hide());\n    }\n    return $el;\n  };\n})(BookReader.prototype.buildMobileDrawerElement);\n\n/**\n * highlights the current chapter based on current page\n * @private\n * @param {TocEntry[]} tocEntries\n * @param {number} tocEntries\n */\nBookReader.prototype.updateTOCState = function(currIndex, tocEntries) {\n  //this function won't have any effects if called before OpenLibrary request is finished\n  if (!tocEntries) {return}\n  $('.current-chapter').removeClass('current-chapter');\n  const tocEntriesIndexed = tocEntries.filter((el) => el.pageIndex != undefined).reverse();\n  const currChapter = tocEntriesIndexed[tocEntriesIndexed.findIndex(\n    (el) => el.pageIndex <= currIndex)];\n  if (currChapter != undefined) {\n    $(currChapter.mobileHTML).addClass('current-chapter');\n  }\n}\n"],"sourceRoot":""}