{"version":3,"file":"plugins/plugin.autoplay.js","mappings":"mNAYuCA,E,oBAPvCC,EAAOC,OAAOC,WAAWC,eAAgB,CACvCC,sBAAsB,IAMxBF,WAAWG,UAAUC,OAAkBP,EAOpCG,WAAWG,UAAUC,MANf,SAAUC,GACfR,EAAOS,KAAKC,KAAMF,GAElBE,KAAKC,UAAY,KACjBD,KAAKE,UAAY,GACnB,GAMFT,WAAWG,UAAUO,KAAQ,SAASb,GACpC,OAAO,SAAUQ,GAAS,IAAAM,EAAA,KACxBd,EAAOS,KAAKC,KAAMF,GAEbE,KAAKF,QAAQH,uBAElBK,KAAKK,KAAKZ,WAAWa,WAAWC,MAAM,kBAAMH,EAAKI,UAAU,IAGzB,MADhB,IAAIC,gBAAgBC,OAAOC,SAASC,QACxCC,IAAI,aAChBb,KAAKc,aAET,CACF,CAb6B,CAa1BrB,WAAWG,UAAUO,MAKxBV,WAAWG,UAAUmB,uBAA0B,SAASzB,GACtD,OAAO,WAAW,IAAA0B,EAAA,KAGhB,GAFA1B,EAAOS,KAAKC,MAEPA,KAAKF,QAAQH,qBAAlB,CAEA,IAAMsB,EAASjB,KAAKkB,EAAE,WAEtBD,EAAOE,OAAO,SAASC,OAAM,WAE3B,OADAJ,EAAKF,cACE,CACT,IAEAG,EAAOE,OAAO,UAAUC,OAAM,WAE5B,OADAJ,EAAKF,cACE,CACT,GAZ8C,CAahD,CACF,CAlB+C,CAkB5CrB,WAAWG,UAAUmB,wBAQxBtB,WAAWG,UAAUkB,WAAa,SAASO,GAAW,IAAAC,EAAA,KACpD,GAAKtB,KAAKF,QAAQH,qBAAlB,CAEA,IAAMG,EAAUoB,EAAE1B,OAAO,CACvB+B,UAAWvB,KAAKuB,UAChBrB,UAAWF,KAAKE,WACfmB,GAEHrB,KAAKuB,UAAyC,iBAAtBzB,EAAQyB,UAAyBzB,EAAQyB,UAAYvB,KAAKuB,UAClFvB,KAAKE,UAAyC,iBAAtBJ,EAAQI,UAAyBJ,EAAQI,UAAYF,KAAKE,UAClFF,KAAKwB,QAAQ/B,WAAWa,WAAWC,MAEnC,IAAIkB,GAAiB,EACjBzB,KAAK0B,cAAgB1B,KAAK2B,OAC5BF,GAAiB,EACjBzB,KAAK4B,WAAW5B,KAAK0B,eAGnB,MAAQ1B,KAAKC,WAKV,MAAQD,KAAK6B,iBAAoBJ,GAIpCzB,KAAK8B,KAAK,CAAEC,aAAa,IAG3B/B,KAAKkB,EAAE,SAASc,OAChBhC,KAAKkB,EAAE,UAAUe,OACjBjC,KAAKC,UAAYiC,aAAY,WACvBZ,EAAKa,YAELC,KAAKC,IAAIf,EAAKgB,QAAQC,cAAejB,EAAKgB,QAAQE,gBAAkBlB,EAAKmB,KAAKC,cAAgB,EAChGpB,EAAKqB,KAAK,CAAEZ,aAAa,IAEzBT,EAAKQ,KAAK,CAAEC,aAAa,IAE7B,GAAG/B,KAAKE,YAERF,KAAKQ,UAzCuC,CA2ChD,EAKAf,WAAWG,UAAUY,SAAW,WACzBR,KAAKF,QAAQH,sBAEd,MAAQK,KAAKC,YACf2C,cAAc5C,KAAKC,WACnBD,KAAKuB,UAAY,OACjBvB,KAAKkB,EAAE,UAAUc,OACjBhC,KAAKkB,EAAE,SAASe,OAChBjC,KAAKC,UAAY,KAErB,C","sources":["webpack://@internetarchive/bookreader/./src/plugins/plugin.autoplay.js"],"sourcesContent":["/*global BookReader */\n\n/**\n * Plugin which adds an autoplay feature. Useful for kiosk situations.\n */\njQuery.extend(BookReader.defaultOptions, {\n  enableAutoPlayPlugin: true,\n});\n\n/**\n * @override BookReader.setup\n */\nBookReader.prototype.setup = (function(super_) {\n  return function (options) {\n    super_.call(this, options);\n\n    this.autoTimer = null;\n    this.flipDelay = 5000;\n  };\n})(BookReader.prototype.setup);\n\n/**\n * @override BookReader.init\n */\nBookReader.prototype.init = (function(super_) {\n  return function (options) {\n    super_.call(this, options);\n\n    if (!this.options.enableAutoPlayPlugin) return;\n\n    this.bind(BookReader.eventNames.stop, () => this.autoStop());\n\n    const urlParams = new URLSearchParams(window.location.search);\n    if (urlParams.get('autoflip') === '1') {\n      this.autoToggle();\n    }\n  };\n})(BookReader.prototype.init);\n\n/**\n * @override BookReader.bindNavigationHandlers\n */\nBookReader.prototype.bindNavigationHandlers = (function(super_) {\n  return function() {\n    super_.call(this);\n\n    if (!this.options.enableAutoPlayPlugin) return;\n\n    const jIcons = this.$('.BRicon');\n\n    jIcons.filter('.play').click(() => {\n      this.autoToggle();\n      return false;\n    });\n\n    jIcons.filter('.pause').click(() => {\n      this.autoToggle();\n      return false;\n    });\n  };\n})(BookReader.prototype.bindNavigationHandlers);\n\n/**\n * Starts autoplay mode\n * @param {object} overrides\n * @param {number} overrides.flipSpeed\n * @param {number} overrides.flipDelay\n */\nBookReader.prototype.autoToggle = function(overrides) {\n  if (!this.options.enableAutoPlayPlugin) return;\n\n  const options = $.extend({\n    flipSpeed: this.flipSpeed,\n    flipDelay: this.flipDelay,\n  }, overrides);\n\n  this.flipSpeed = typeof options.flipSpeed === \"number\" ? options.flipSpeed : this.flipSpeed;\n  this.flipDelay = typeof options.flipDelay === \"number\" ? options.flipDelay : this.flipDelay;\n  this.trigger(BookReader.eventNames.stop);\n\n  let bComingFrom1up = false;\n  if (this.constMode2up != this.mode) {\n    bComingFrom1up = true;\n    this.switchMode(this.constMode2up);\n  }\n\n  if (null == this.autoTimer) {\n    // $$$ Draw events currently cause layout problems when they occur during animation.\n    //     There is a specific problem when changing from 1-up immediately to autoplay in RTL so\n    //     we workaround for now by not triggering immediate animation in that case.\n    //     See https://bugs.launchpad.net/gnubook/+bug/328327\n    if (('rl' == this.pageProgression) && bComingFrom1up) {\n      // don't flip immediately -- wait until timer fires\n    } else {\n      // flip immediately\n      this.next({ triggerStop: false });\n    }\n\n    this.$('.play').hide();\n    this.$('.pause').show();\n    this.autoTimer = setInterval(() => {\n      if (this.animating) return;\n\n      if (Math.max(this.twoPage.currentIndexL, this.twoPage.currentIndexR) >= this.book.getNumLeafs() - 1) {\n        this.prev({ triggerStop: false }); // $$$ really what we want?\n      } else {\n        this.next({ triggerStop: false });\n      }\n    }, this.flipDelay);\n  } else {\n    this.autoStop();\n  }\n};\n\n/**\n * Stop autoplay mode, allowing animations to finish\n */\nBookReader.prototype.autoStop = function() {\n  if (!this.options.enableAutoPlayPlugin) return;\n\n  if (null != this.autoTimer) {\n    clearInterval(this.autoTimer);\n    this.flipSpeed = 'fast';\n    this.$('.pause').hide();\n    this.$('.play').show();\n    this.autoTimer = null;\n  }\n};\n"],"names":["super_","jQuery","extend","BookReader","defaultOptions","enableAutoPlayPlugin","prototype","setup","options","call","this","autoTimer","flipDelay","init","_this","bind","eventNames","stop","autoStop","URLSearchParams","window","location","search","get","autoToggle","bindNavigationHandlers","_this2","jIcons","$","filter","click","overrides","_this3","flipSpeed","trigger","bComingFrom1up","constMode2up","mode","switchMode","pageProgression","next","triggerStop","hide","show","setInterval","animating","Math","max","twoPage","currentIndexL","currentIndexR","book","getNumLeafs","prev","clearInterval"],"sourceRoot":""}