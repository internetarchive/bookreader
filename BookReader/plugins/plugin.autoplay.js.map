{"version":3,"sources":["webpack://@internetarchive/bookreader/./src/js/plugins/plugin.autoplay.js"],"names":["super_","jQuery","extend","BookReader","defaultOptions","enableAutoPlayPlugin","prototype","setup","options","call","this","auto","autoTimer","flipDelay","init","bind","eventNames","stop","autoStop","bindNavigationHandlers","jIcons","$","add","filter","click","autoToggle","overrides","flipSpeed","trigger","bComingFrom1up","constMode2up","mode","switchMode","reduce","twoPageGetAutofitReduce","zoom","pageProgression","flipFwdToIndex","hide","show","setInterval","animating","Math","max","twoPage","currentIndexL","currentIndexR","lastDisplayableIndex","flipBackToIndex","clearInterval"],"mappings":"mKAYuCA,E,oBAPvCC,EAAOC,OAAOC,WAAWC,eAAgB,CACvCC,sBAAsB,IAMxBF,WAAWG,UAAUC,OAAkBP,EAQpCG,WAAWG,UAAUC,MAPf,SAAUC,GACfR,EAAOS,KAAKC,KAAMF,GAElBE,KAAKC,MAAY,EACjBD,KAAKE,UAAY,KACjBF,KAAKG,UAAY,MAOrBV,WAAWG,UAAUQ,KAAQ,SAASd,GACpC,OAAO,SAAUQ,GAAS,WACxBR,EAAOS,KAAKC,KAAMF,GAEbE,KAAKF,QAAQH,sBAClBK,KAAKK,KAAKZ,WAAWa,WAAWC,MAAM,kBAAM,EAAKC,eALxB,CAO1Bf,WAAWG,UAAUQ,MAKxBX,WAAWG,UAAUa,uBAA0B,SAASnB,GACtD,OAAO,WAAW,WAGhB,GAFAA,EAAOS,KAAKC,MAEPA,KAAKF,QAAQH,qBAAlB,CAGA,IAAMe,EAASV,KAAKW,EAAE,WAAWC,IAAI,yBAErCF,EAAOG,OAAO,SAASC,OAAM,WAE3B,OADA,EAAKC,cACE,KAGTL,EAAOG,OAAO,UAAUC,OAAM,WAE5B,OADA,EAAKC,cACE,OAhBkC,CAmB5CtB,WAAWG,UAAUa,wBAQxBhB,WAAWG,UAAUmB,WAAa,SAASC,GAAW,WACpD,GAAKhB,KAAKF,QAAQH,qBAAlB,CAEA,IAAMG,EAAUa,EAAEnB,OAAO,CACvByB,UAAWjB,KAAKiB,UAChBd,UAAWH,KAAKG,WACfa,GAEHhB,KAAKiB,UAAyC,iBAAtBnB,EAAQmB,UAAyBnB,EAAQmB,UAAYjB,KAAKiB,UAClFjB,KAAKG,UAAyC,iBAAtBL,EAAQK,UAAyBL,EAAQK,UAAYH,KAAKG,UAClFH,KAAKkB,QAAQzB,WAAWa,WAAWC,MAEnC,IAAIY,GAAiB,EACjBnB,KAAKoB,cAAgBpB,KAAKqB,OAC5BF,GAAiB,EACjBnB,KAAKsB,WAAWtB,KAAKoB,eAInBpB,KAAKuB,OAASvB,KAAKwB,2BACrBxB,KAAKyB,KAAK,QAGR,MAAQzB,KAAKE,WAKV,MAAQF,KAAK0B,iBAAoBP,GAIpCnB,KAAK2B,iBAGP3B,KAAKW,EAAE,SAASiB,OAChB5B,KAAKW,EAAE,UAAUkB,OACjB7B,KAAKE,UAAY4B,aAAY,WACvB,EAAKC,YAELC,KAAKC,IAAI,EAAKC,QAAQC,cAAe,EAAKD,QAAQE,gBAAkB,EAAKC,uBAC3E,EAAKC,gBAAgB,GAErB,EAAKX,oBAEN3B,KAAKG,YAERH,KAAKQ,aAOTf,WAAWG,UAAUY,SAAW,WACzBR,KAAKF,QAAQH,sBAEd,MAAQK,KAAKE,YACfqC,cAAcvC,KAAKE,WACnBF,KAAKiB,UAAY,OACjBjB,KAAKW,EAAE,UAAUiB,OACjB5B,KAAKW,EAAE,SAASkB,OAChB7B,KAAKE,UAAY,S","file":"plugins/plugin.autoplay.js","sourcesContent":["/*global BookReader */\n\n/**\n * Plugin which adds an autoplay feature. Useful for kiosk situations.\n */\njQuery.extend(BookReader.defaultOptions, {\n  enableAutoPlayPlugin: true\n});\n\n/**\n * @override BookReader.setup\n */\nBookReader.prototype.setup = (function(super_) {\n  return function (options) {\n    super_.call(this, options);\n\n    this.auto      = false;\n    this.autoTimer = null;\n    this.flipDelay = 5000;\n  };\n})(BookReader.prototype.setup);\n\n/**\n * @override BookReader.init\n */\nBookReader.prototype.init = (function(super_) {\n  return function (options) {\n    super_.call(this, options);\n\n    if (!this.options.enableAutoPlayPlugin) return;\n    this.bind(BookReader.eventNames.stop, () => this.autoStop());\n  };\n})(BookReader.prototype.init);\n\n/**\n * @override BookReader.bindNavigationHandlers\n */\nBookReader.prototype.bindNavigationHandlers = (function(super_) {\n  return function() {\n    super_.call(this);\n\n    if (!this.options.enableAutoPlayPlugin) return;\n\n    // Note the mobile plugin attaches itself to body, so we need to select outside\n    const jIcons = this.$('.BRicon').add('.BRmobileMenu .BRicon');\n\n    jIcons.filter('.play').click(() => {\n      this.autoToggle();\n      return false;\n    });\n\n    jIcons.filter('.pause').click(() => {\n      this.autoToggle();\n      return false;\n    });\n  };\n})(BookReader.prototype.bindNavigationHandlers);\n\n/**\n * Starts autoplay mode\n * @param {object} overrides\n * @param {number} overrides.flipSpeed\n * @param {number} overrides.flipDelay\n */\nBookReader.prototype.autoToggle = function(overrides) {\n  if (!this.options.enableAutoPlayPlugin) return;\n\n  const options = $.extend({\n    flipSpeed: this.flipSpeed,\n    flipDelay: this.flipDelay\n  }, overrides);\n\n  this.flipSpeed = typeof options.flipSpeed === \"number\" ? options.flipSpeed : this.flipSpeed;\n  this.flipDelay = typeof options.flipDelay === \"number\" ? options.flipDelay : this.flipDelay;\n  this.trigger(BookReader.eventNames.stop);\n\n  let bComingFrom1up = false;\n  if (this.constMode2up != this.mode) {\n    bComingFrom1up = true;\n    this.switchMode(this.constMode2up);\n  }\n\n  // Change to autofit if book is too large\n  if (this.reduce < this.twoPageGetAutofitReduce()) {\n    this.zoom('auto');\n  }\n\n  if (null == this.autoTimer) {\n    // $$$ Draw events currently cause layout problems when they occur during animation.\n    //     There is a specific problem when changing from 1-up immediately to autoplay in RTL so\n    //     we workaround for now by not triggering immediate animation in that case.\n    //     See https://bugs.launchpad.net/gnubook/+bug/328327\n    if (('rl' == this.pageProgression) && bComingFrom1up) {\n      // don't flip immediately -- wait until timer fires\n    } else {\n      // flip immediately\n      this.flipFwdToIndex();\n    }\n\n    this.$('.play').hide();\n    this.$('.pause').show();\n    this.autoTimer = setInterval(() => {\n      if (this.animating) return;\n\n      if (Math.max(this.twoPage.currentIndexL, this.twoPage.currentIndexR) >= this.lastDisplayableIndex()) {\n        this.flipBackToIndex(1); // $$$ really what we want?\n      } else {\n        this.flipFwdToIndex();\n      }\n    }, this.flipDelay);\n  } else {\n    this.autoStop();\n  }\n};\n\n/**\n * Stop autoplay mode, allowing animations to finish\n */\nBookReader.prototype.autoStop = function() {\n  if (!this.options.enableAutoPlayPlugin) return;\n\n  if (null != this.autoTimer) {\n    clearInterval(this.autoTimer);\n    this.flipSpeed = 'fast';\n    this.$('.pause').hide();\n    this.$('.play').show();\n    this.autoTimer = null;\n  }\n};\n"],"sourceRoot":""}